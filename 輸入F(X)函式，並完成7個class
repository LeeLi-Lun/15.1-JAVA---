import java.util.*;
import javax.swing.JPanel;

public class FunctionAnswer{
	public static void main(String[] args){
	
	}
}

abstract class AbstractDrawFunction extends jPanel{
	/** Polygon to hold the points*/
	private Polygon p = new Polygon();
	
	protected AbstrctDrawFuncrion(){
		drawFunction();
	}
	
	/** Return the y-coordinate*/
	abstract double f(double x);
	
	/** Obtain points for x-coordinates 100,101, ... , 300*/
	public void drawFunction(){
		for(int x = -100; x <= 100; x++){
			p.addPoint( x + 200, 200 - (int)f(x));
		}
	}
	
	@Override /** Draw axes, labels, and connect points*/
	protected void paintComponent(Graphics g){
		
	}
}

class Function_a extends AbstractDrawFunction{
	private double answer_a = 0.0;
	
	Function_a(){};
	
	double f(double x){
		answer_a = x * x;
	}
	
	public void setAsnwer_a(double a){
		answer_a = a;
	}
	
	public double getAnswer_a(){
		return answer_a;
	}
}

class Function_b extends AbstractDrawFunction{
	private double answer_b = 0.0;
	
	Function_b(){};
	
	public double f(double x){
		answer_b = math.sin(x);
	}
	
	public void setAsnwer_b(double b){
		answer_b = b;
	}
	
	public double getAnswer_b(){
		return answer_b;
	}
	
}

class Function_c extends AbstractDrawFunction{
	private double answer_c = 0.0;
	
	Function_c(){};
	
	double f(double x){
		answer_c = math.cos(x);
	}
	
	public void setAsnwer_c(double c){
		answer_c = c;
	}
	
	public double getAnswer_c(){
		return answer_c;
	}
}

class Function_d extends AbstractDrawFunction{
	private double answer_d = 0.0;
	
	Function_d(){};
	
	double f(double x){
		answer_d = math.tan(x);
	}
	
	public void setAsnwer_d(double d){
		answer_d = d;
	}
	
	public double getAnswer_d(){
		return answer_d;
	}
}

class Function_e extends AbstractDrawFunction{
	private double answer_e = 0.0;
	
	Function_e(){};
	
	double f(double x){
		answer_e = math.cos(x) + 5 * (math.sin(x));
	}
	
	public void setAsnwer_e(double e){
		answer_e = e;
	}
	
	public double getAnswer_e(){
		return answer_e;
	}
}

class Function_f extends AbstractDrawFunction{
	private double answer_f = 0.0;
	
	Function_f(){};
	
	double f(double x){
		answer_f = 5 *(math.cos(x)) + math.sin(x);
	}
	
	public void setAsnwer_f(double f){
		answer_f = f;
	}
	
	public double getAnswer_f(){
		return answer_f;
	}
}

class Function_g extends AbstractDrawFunction{
	private double answer_g = 0.0;
	
	Function_g(){};
	
	double f(double x){
		answer_g = (x * x) + math.log10(x);
	}
	
	public void setAsnwer_g(double g){
		answer_g = g;
	}
	
	public double getAnswer_g(){
		return answer_g;
	}
}
